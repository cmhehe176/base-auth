networks:
  base-net: {}

volumes:
  base-vol: {}

services:
  
  base:
    build: 
      context: .
      dockerfile: Dockerfile
    command: ['yarn', 'dev']
    depends_on:
      database:
        condition: service_healthy
    networks:
      - base-net
    ports:
      - 3000:${PORT}/tcp
    volumes:
      - .:/base
  
  database:
    image: mysql:8.0
    healthcheck:
      test: 
        [
          'CMD-SHELL',
          'MYSQL_PWD=$$MYSQL_ROOT_PASSWORD mysqladmin ping -u root -h localhost -s',
        ]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 20s
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_USERNAME=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    restart: unless-stopped
    ports:
      - 3306:${MYSQL_PORT}
    networks:
      - base-net
    volumes:
      - base-vol:/var/lib/mysql

  adminer:
    image: adminer
    healthcheck:
      interval: 5s
      retries: 5
      start_period: 20s
      test: ['CMD', 'wget', '--no-verbose', '--spider', 'http://localhost:8080']
      timeout: 5s
    environment:
      - ADMINER_DEFAULT_SERVER=database
      - ADMINER_PLUGINS=dump-json dump-zip edit-foreign json-column tables-filter tinymce
    restart: always
    networks:
      - base-net
    ports:
      - 8080:8080/tcp